{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { map, finalize } from 'rxjs/operators';\nexport let PostService = class PostService {\n  constructor(afs, storage) {\n    this.afs = afs;\n    this.storage = storage;\n    this.postsCollection = afs.collection('posts');\n  }\n  getAllPosts() {\n    return this.postsCollection.snapshotChanges().pipe(map(actions => actions.map(a => {\n      const data = a.payload.doc.data();\n      const id = a.payload.doc.id;\n      return {\n        id,\n        ...data\n      };\n    })));\n  }\n  getOnePost(id) {\n    return this.afs.doc(`posts/${id}`).valueChanges();\n  }\n  deletePostById(post) {\n    return this.postsCollection.doc(post.id).delete();\n  }\n  editPostById(post, newImage) {\n    if (newImage) {\n      this.uploadImage(post, newImage);\n    } else {\n      return this.postsCollection.doc(post.id).update(post);\n    }\n  }\n  preAddAndUpdatePost(post, image) {\n    this.uploadImage(post, image);\n  }\n  savePost(post) {\n    const postObj = {\n      titlePost: post.titlePost,\n      contentPost: post.contentPost,\n      imagePost: this.downloadURL,\n      fileRef: this.filePath,\n      tagsPost: post.tagsPost\n    };\n    if (post.id) {\n      return this.postsCollection.doc(post.id).update(postObj);\n    } else {\n      return this.postsCollection.add(postObj);\n    }\n  }\n  uploadImage(post, image) {\n    this.filePath = `images/${image.name}`;\n    const fileRef = this.storage.ref(this.filePath);\n    const task = this.storage.upload(this.filePath, image);\n    task.snapshotChanges().pipe(finalize(() => {\n      fileRef.getDownloadURL().subscribe(urlImage => {\n        this.downloadURL = urlImage;\n        this.savePost(post);\n      });\n    })).subscribe();\n  }\n};\nPostService = __decorate([Injectable({\n  providedIn: 'root'\n})], PostService);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}